/**
 * Copyright 2012-2013 Echo.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Version: 3.0.15 (2013-11-18 11:09:48 UTC)
 */

(function(e){"use strict";var t=e,n=Echo.Control.manifest("Echo.IdentityServer.Controls.Auth");if(Echo.Control.isDefined(n))return;n.config={identityManager:{},infoMessages:{enabled:!1}},n.dependencies=[{loaded:function(){return!!Echo.GUI},url:"{config:cdnBaseURL.sdk}/gui.pack.js"},{url:"{config:cdnBaseURL.sdk}/gui.pack.css"}],n.vars={modal:null},n.labels={edit:"Edit",login:"Login",logout:"Logout",loggingOut:"Logging out...",or:"or",signup:"signup"},n.events={"Echo.UserSession.onInvalidate":{context:"global",handler:function(){this.modal&&this.modal.hide()}}},n.templates.anonymous='<div class="{class:userAnonymous}"><span class="{class:login} echo-linkColor echo-clickable">{label:login}</span><span class="{class:or}"> {label:or} </span><span class="{class:signup} echo-linkColor echo-clickable">{label:signup}</span></div>',n.templates.logged='<div class="{class:userLogged}"><div class="{class:avatar}"></div><div class="{class:name}"></div><div class="{class:edit} echo-linkColor echo-clickable">{label:edit}</div><div class="{class:logout} echo-linkColor echo-clickable">{label:logout}</div><div class="echo-clear"></div></div>',n.renderers.logout=function(e){var t=this;return e.click(function(){e.empty().append(t.labels.get("loggingOut")),t.user.logout()})},n.renderers.login=function(e){return this._assembleIdentityControl("login",e)},n.renderers.edit=function(e){return this._assembleIdentityControl("edit",e)},n.renderers.signup=function(e){return this._assembleIdentityControl("signup",e)},n.renderers.or=function(e){return(!this.config.get("identityManager.login")||!this.config.get("identityManager.signup")||!this.user.get("sessionID"))&&e.hide(),e},n.renderers.avatar=function(e){return this.placeImage({container:e,image:this.user.get("avatar"),defaultImage:this.config.get("defaultAvatar")}),e},n.renderers.name=function(e){return e.append(this.user.get("name",""))},n.methods.template=function(){return this.templates[this.user.is("logged")?"logged":"anonymous"]},n.methods._assembleIdentityControl=function(e,n){var r=this,i=this.config.get("identityManager."+e);return!i||!this.user.get("sessionID")?n.hide():i.type==="script"?n.click(function(){t.getScript(r._appendSessionID(i.url))}):n.on("click",function(){r.modal=new Echo.GUI.Modal({data:{title:i.title},href:r._appendSessionID(i.url),width:parseInt(i.width),height:parseInt(i.height),padding:"0 0 5px 0",footer:!1,fade:!0,onShow:function(){Backplane.expectMessages("identity/ack")},onHide:function(){r.modal=null}}),r.modal.show()})},n.methods._appendSessionID=function(e){var t=encodeURIComponent(this.user.get("sessionID")),n=Echo.Utils.parseURL(e),r=n.query?n.query.match(/=$/)?t:"&sessionID="+t:"sessionID="+t,i="{data:scheme}://{data:domain}{data:path}?{data:query}{data:fragment}";return this.substitute({template:i,data:{scheme:n.scheme||"http",domain:n.domain,path:n.path,query:(n.query||"")+r,fragment:n.fragment?"#"+n.fragment:""}})},n.css=".{class:logout} { float: right; }.{class:userAnonymous} { text-align: right; }.{class:avatar} { float: left; width: 24px; height: 24px; }.{class:name} { float: left; font-size: 18px; line-height: 24px; margin-left: 5px; font-weight: bold; }.{class:edit} { float: left; margin: 6px 0px 0px 12px; }",Echo.Control.create(n)})(Echo.jQuery);
(function(e){"use strict";var t=e,n=Echo.Plugin.manifest("JanrainConnector","Echo.IdentityServer.Controls.Auth");if(Echo.Plugin.isDefined(n))return;n.init=function(){var e=this,n=this.component;t.each(e.config.get("buttons",[]),function(r,i){var s=n.config.get("identityManager."+i,{}),o=encodeURIComponent(Echo.Utils.objectToJSON(e.config.get("signinWidgetConfig")));s.url=n.config.get("cdnBaseURL.sdk")+"/third-party/janrain/auth.html?appId="+e.config.get("appId")+"&signinConfig="+o+"&bpChannel=",t.each(["title","width","height"],function(t,n){if(s[n])return;s[n]=e.config.get(n)}),n.config.set("identityManager."+i,s)})},n.config={appId:"",buttons:["login"],title:"",height:260,width:420,signinWidgetConfig:{}},n.enabled=function(){return this.config.get("appId")&&this.config.get("buttons").length},Echo.Plugin.create(n)})(Echo.jQuery);